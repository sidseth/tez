/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.tez.serviceplugins.api;

import org.apache.hadoop.classification.InterfaceAudience;
import org.apache.hadoop.classification.InterfaceStability;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.yarn.api.records.ApplicationAttemptId;
import org.apache.hadoop.yarn.api.records.ContainerId;

@InterfaceAudience.Public
@InterfaceStability.Unstable
public interface ContainerLauncherContext {

  // TODO Post TEZ-2003. Tez abstraction for ContainerId, NodeId, other YARN constructs

  // Reporting APIs
  void containerLaunched(ContainerId containerId);

  void containerLaunchFailed(ContainerId containerId, String diagnostics);

  void containerStopRequested(ContainerId containerId);

  void containerStopFailed(ContainerId containerId, String diagnostics);

  // TODO Post TEZ-2003. TaskAttemptEndReason does not belong here, and is an unnecessary leak.
  // ContainerCompleted is normally generated by the scheduler in case of YARN since the RM informs about completion.
  // For other sources, there may not be a central entity making this information available. The ContainerLauncher
  // on the stop request will likely be the best place to generate it.
  void containerCompleted(ContainerId containerId, int exitStatus, String diagnostics, TaskAttemptEndReason endReason);

  // Lookup APIs

  // TODO TEZ-2003. To be replaced by getInitialPayload once the DAG API is changed.
  Configuration getInitialConfiguration();

  int getNumNodes(String sourceName);

  ApplicationAttemptId getApplicationAttemptId();

  Object getTaskCommunicatorMetaInfo(String taskCommName);
}
